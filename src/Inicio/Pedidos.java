/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inicio;

import reportes.Reportes;
import com.mysql.jdbc.StringUtils;
import java.awt.Color;
import java.awt.Component;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import java.util.EventObject;
import java.util.List;
import java.util.concurrent.ScheduledThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractCellEditor;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.InputVerifier;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import modelos.DetallePedido;
import modelos.Empleado;
import modelos.Parametros;
import modelos.Pedido;
import modelos.Producto;
import modelos.Usuario;
import org.eclipse.persistence.jpa.jpql.parser.DateTime;
import servicios.Conexion;
import servicios.Empleados_servicio;
import servicios.Impresion_servicio;
import servicios.Parametros_servicio;
import servicios.Pedidos_servicio;
import servicios.Productos_servicio;
import servicios.Usuarios_servicio;
import util.RequeridoListener;

/**
 *
 * @author cami
 */
public class Pedidos extends javax.swing.JFrame {

    private Pedido ped = null;
    private JComboBox comboProductos = null;

    /**
     * Creates new form Inicio
     */
    public Pedidos() {
        comboProductos = new JComboBox();
        List<Producto> productos = null;
        try {
            productos = Productos_servicio.getInstance().recuperarTodas();
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        comboProductos.addItem(null);
        for (int i = 0; i < productos.size(); i++) {
            comboProductos.addItem(productos.get(i));

        }
        initComponents();
        cargarComboEmpleado(jComboEmpleado);

        cargarPantallaNuevoPed();
        jButtonGuardarPed.setEnabled(false);
        new RequeridoListener(jRVDTextFechaD);
        new RequeridoListener(jRVDTextFechaH);
        new RequeridoListener(jRVPTextFechaDesde);
        new RequeridoListener(jRVPTextFechaHasta);
        new RequeridoListener(jRTXTFd);
        new RequeridoListener(jRTXTFh);
        new RequeridoListener(jTextEmpleadoNombre);
        new RequeridoListener(jTextEmpleadoId);
        new RequeridoListener(jTextEmpleadoDNI);
        new RequeridoListener(jTextEmpleadoBonPorc);
        new RequeridoListener(jTextEmpleadoBon);
        new RequeridoListener(jTextRCEFD);
        new RequeridoListener(jTextRCEFH);
        new RequeridoListener(jRTXTTFd);
        new RequeridoListener(jRTXTTFh);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/Bridar.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPanelBusqPed = new javax.swing.JPanel();
        jButtonNuevoPed = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextNroPedido = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFecha = new javax.swing.JFormattedTextField();
        jComboEmpleado = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePedidos = new javax.swing.JTable();
        jPanelModifPed = new javax.swing.JPanel();
        jButtonGuardarPed = new javax.swing.JButton();
        jButtonCancelarPed = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabelNped = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEditPed = new javax.swing.JTable(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0 || column==3? true : false;
            }
            @Override
            public Class

            getColumnClass(int column) {
                switch (column) {
                    case 0:
                    return Object.class;

                    case 1:
                    return Object.class;

                    case 2:
                    return double.class;

                    case 3:
                    return Integer.class;

                    case 4:
                    return double.class;
                    default

                    :
                    return Object.class;
                }
            }}
            ;
            jButtonAddItem = new javax.swing.JButton();
            jLabel6 = new javax.swing.JLabel();
            jLabelTotal = new javax.swing.JLabel();
            jButtonDeleteItem = new javax.swing.JButton();
            jTextEmpleadoLeg = new javax.swing.JTextField();
            jLabelEmpleadoNombre = new javax.swing.JLabel();
            jLabel7 = new javax.swing.JLabel();
            jLabel8 = new javax.swing.JLabel();
            jLabel9 = new javax.swing.JLabel();
            jLabelBonifMonto = new javax.swing.JLabel();
            jLabelBonificado = new javax.swing.JLabel();
            jLabelTotalFinal = new javax.swing.JLabel();
            jLabelSaldoQuincena = new javax.swing.JLabel();
            jLabel10 = new javax.swing.JLabel();
            jLabelTopeDiario = new javax.swing.JLabel();
            jLabel11 = new javax.swing.JLabel();
            jLabelSaldo = new javax.swing.JLabel();
            jLabel19 = new javax.swing.JLabel();
            jLabel27 = new javax.swing.JLabel();
            jLabelPedFecha = new javax.swing.JLabel();
            jPanelEmpleados = new javax.swing.JPanel();
            jTextEmpleadoId = new javax.swing.JTextField();
            jLabel12 = new javax.swing.JLabel();
            jLabel13 = new javax.swing.JLabel();
            jTextEmpleadoDNI = new javax.swing.JTextField();
            jLabel14 = new javax.swing.JLabel();
            jTextEmpleadoNombre = new javax.swing.JTextField();
            jLabel15 = new javax.swing.JLabel();
            jTextEmpleadoTarjeta = new javax.swing.JTextField();
            jLabel16 = new javax.swing.JLabel();
            jLabel17 = new javax.swing.JLabel();
            jTextEmpleadoBonPorc = new javax.swing.JTextField();
            jLabel18 = new javax.swing.JLabel();
            jTextEmpleadoBon = new javax.swing.JTextField();
            jButtonCrearEmpleado = new javax.swing.JButton();
            jButtonCancelarEmpleado = new javax.swing.JButton();
            jLabel32 = new javax.swing.JLabel();
            jComboEmpleadoTipo = new javax.swing.JComboBox<>();
            jPanelReporteVentasProd = new javax.swing.JPanel();
            jRVPTextFechaDesde = new javax.swing.JFormattedTextField();
            jLabel20 = new javax.swing.JLabel();
            jLabel21 = new javax.swing.JLabel();
            jRVPTextFechaHasta = new javax.swing.JFormattedTextField();
            jLabel22 = new javax.swing.JLabel();
            jRVPComboTurno = new javax.swing.JComboBox<>();
            jButtonGenerarReporteVentasProd = new javax.swing.JButton();
            jPanelReporteVentaDia = new javax.swing.JPanel();
            jRVDTextFechaD = new javax.swing.JTextField();
            jRVDTextFechaH = new javax.swing.JTextField();
            jLabel23 = new javax.swing.JLabel();
            jLabel24 = new javax.swing.JLabel();
            jButtonGenerarRVD = new javax.swing.JButton();
            jPanelReporteTXT = new javax.swing.JPanel();
            jLabel25 = new javax.swing.JLabel();
            jLabel26 = new javax.swing.JLabel();
            jRTXTFd = new javax.swing.JTextField();
            jRTXTFh = new javax.swing.JTextField();
            jButtonGenerarRTXT = new javax.swing.JButton();
            jLabel33 = new javax.swing.JLabel();
            jRTXTCE = new javax.swing.JComboBox<>();
            jPanelParametros = new javax.swing.JPanel();
            jScrollPane3 = new javax.swing.JScrollPane();
            jTableParam = new javax.swing.JTable(){
                @Override
                public boolean isCellEditable(int row, int column) {
                    return column == 1? true : false;
                }};
                jButtonParamGuardar = new javax.swing.JButton();
                jPanelEmpleadosEliminar = new javax.swing.JPanel();
                jTextEmpIdElim = new javax.swing.JTextField();
                jLabelEmpElim = new javax.swing.JLabel();
                jLabel29 = new javax.swing.JLabel();
                jButtonEmpElim = new javax.swing.JButton();
                jButtonEmpElimCanc = new javax.swing.JButton();
                jPanelReporteConsumosEmpleado = new javax.swing.JPanel();
                jTextRCEFD = new javax.swing.JTextField();
                jTextRCEFH = new javax.swing.JTextField();
                jComboRCEEmp = new javax.swing.JComboBox<>();
                jLabel28 = new javax.swing.JLabel();
                jLabel30 = new javax.swing.JLabel();
                jLabel31 = new javax.swing.JLabel();
                jButtonRCEGen = new javax.swing.JButton();
                jPanelReporteTXTTotal = new javax.swing.JPanel();
                jLabel34 = new javax.swing.JLabel();
                jLabel35 = new javax.swing.JLabel();
                jRTXTTFd = new javax.swing.JTextField();
                jRTXTTFh = new javax.swing.JTextField();
                jButtonGenerarRTXTTotal = new javax.swing.JButton();
                jLabel36 = new javax.swing.JLabel();
                jRTXTTCE = new javax.swing.JComboBox<>();
                jMenuBar1 = new javax.swing.JMenuBar();
                jMenuPedidos = new javax.swing.JMenu();
                jMenu2 = new javax.swing.JMenu();
                jMenuEmpleados = new javax.swing.JMenu();
                jMenuEmpleadoNuevo = new javax.swing.JMenuItem();
                jMenuEmpleadoEliminar = new javax.swing.JMenuItem();
                jMenuReportes = new javax.swing.JMenu();
                jMenuRVP = new javax.swing.JMenuItem();
                jMenuRVD = new javax.swing.JMenuItem();
                jMenuRTXT = new javax.swing.JMenuItem();
                jMenuRTXTTotal = new javax.swing.JMenuItem();
                jMenuRCE = new javax.swing.JMenuItem();
                jMenuParam = new javax.swing.JMenu();

                jMenu3.setText("jMenu3");

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("Aplicación Pedidos");
                setSize(new java.awt.Dimension(598, 311));
                addComponentListener(new java.awt.event.ComponentAdapter() {
                    public void componentResized(java.awt.event.ComponentEvent evt) {
                        formComponentResized(evt);
                    }
                });
                getContentPane().setLayout(new java.awt.CardLayout());

                jButtonNuevoPed.setText("Nuevo pedido");
                jButtonNuevoPed.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonNuevoPedActionPerformed(evt);
                    }
                });

                jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Buscar Pedidos"));

                jLabel1.setText("Nro pedido");

                jLabel2.setText("Fecha");

                jTextFecha.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jTextFechaActionPerformed(evt);
                    }
                });

                jComboEmpleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
                jComboEmpleado.setName("");
                jComboEmpleado.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jComboEmpleadoActionPerformed(evt);
                    }
                });

                jLabel3.setText("Empleado");

                jButtonBuscar.setText("Buscar");
                jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonBuscarActionPerformed(evt);
                    }
                });

                jTablePedidos.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                    },
                    new String [] {
                        "Nro. Pedido", "Fecha", "Empleado", "Modificar","Eliminar"
                    }
                ));
                jTablePedidos.getColumn("Modificar").setCellRenderer(new EditCellRenderer());
                jTablePedidos.getColumn("Modificar").setCellEditor(new EditCellEditor());
                JScrollPane scroll = new JScrollPane(jTablePedidos);
                //jPanel2.add(scroll);
                setSize(400, 100);
                setVisible(true);
                jTablePedidos.getColumn("Eliminar").setCellRenderer(new DeleteCellRenderer());
                jTablePedidos.getColumn("Eliminar").setCellEditor(new DeleteCellEditor());
                jTablePedidos.setSurrendersFocusOnKeystroke(true);
                jTablePedidos.setEnabled(true);
                jTablePedidos.setRowHeight(30);
                jScrollPane2.setViewportView(jTablePedidos);

                javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                jPanel1.setLayout(jPanel1Layout);
                jPanel1Layout.setHorizontalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonBuscar)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 826, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFecha)
                            .addComponent(jTextNroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26)
                        .addComponent(jComboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                jPanel1Layout.setVerticalGroup(
                    jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jComboEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextNroPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jTextFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButtonBuscar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 391, Short.MAX_VALUE)
                        .addContainerGap())
                );

                jComboEmpleado.getAccessibleContext().setAccessibleName("\"\"");

                javax.swing.GroupLayout jPanelBusqPedLayout = new javax.swing.GroupLayout(jPanelBusqPed);
                jPanelBusqPed.setLayout(jPanelBusqPedLayout);
                jPanelBusqPedLayout.setHorizontalGroup(
                    jPanelBusqPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBusqPedLayout.createSequentialGroup()
                        .addComponent(jButtonNuevoPed)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelBusqPedLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                jPanelBusqPedLayout.setVerticalGroup(
                    jPanelBusqPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBusqPedLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonNuevoPed)
                        .addGap(30, 30, 30)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                getContentPane().add(jPanelBusqPed, "card2");

                jPanelModifPed.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificar Pedido"));
                jPanelModifPed.setMinimumSize(new java.awt.Dimension(44, 25));

                jButtonGuardarPed.setText("Guardar");
                jButtonGuardarPed.setName("jButtonGuardarPed"); // NOI18N
                jButtonGuardarPed.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonGuardarPedActionPerformed(evt);
                    }
                });

                jButtonCancelarPed.setText("Cancelar");
                jButtonCancelarPed.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonCancelarPedActionPerformed(evt);
                    }
                });

                jLabel4.setText("Número de pedido");

                jLabel5.setText("Empleado");

                jTableEditPed.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                        {null,null, null, null, null}
                    },
                    new String [] {
                        "Código","Producto", "Precio", "Cantidad", "Total"
                    }
                ));
                jTableEditPed.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
                jScrollPane1.setViewportView(jTableEditPed);
                jTableEditPed.getModel().addTableModelListener(new TableModelListener(){
                    public void tableChanged(TableModelEvent e){
                        if(e.getType()== TableModelEvent.UPDATE)
                        {
                            int column = e.getColumn();
                            if (column == 0){
                                completarProducto();
                            }
                            else if (column == 3)
                            {

                                if(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),2)!= null && !"".equals(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),2)) && jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),3)!= null && !"".equals(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),3)) ){
                                    if(Integer.valueOf(String.valueOf(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(), 3)))>=0){

                                        Double precio = Double.valueOf(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),2).toString());
                                        int cant =  Integer.valueOf(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(),3).toString());
                                        Double tot = precio*cant;
                                        jTableEditPed.setValueAt(tot,jTableEditPed.getSelectedRow(),4);

                                        recalculaTotal();
                                        agregarFila();
                                        jTableEditPed.setCellSelectionEnabled(true);
                                        jTableEditPed.changeSelection(jTableEditPed.getSelectedRow()+1, 0, false, false);
                                        jTableEditPed.requestFocus();
                                    }
                                    else
                                    {
                                        jTableEditPed.setValueAt(0, jTableEditPed.getSelectedRow(), 3);
                                        recalculaTotal();
                                    }
                                }
                                else{
                                    jTableEditPed.setValueAt(0, jTableEditPed.getSelectedRow(), 4);
                                    recalculaTotal();
                                }
                            }

                        }
                    }
                });

                jButtonAddItem.setText("+");
                jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonAddItemActionPerformed(evt);
                    }
                });

                jLabel6.setText("Subtotal   $");

                jButtonDeleteItem.setText("-");
                jButtonDeleteItem.setMaximumSize(new java.awt.Dimension(44, 25));
                jButtonDeleteItem.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonDeleteItemActionPerformed(evt);
                    }
                });

                jTextEmpleadoLeg.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        jTextEmpleadoLegFocusGained(evt);
                    }
                    public void focusLost(java.awt.event.FocusEvent evt) {
                        jTextEmpleadoLegFocusLost(evt);
                    }
                });
                jTextEmpleadoLeg.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jTextEmpleadoLegActionPerformed(evt);
                    }
                });
                jTextEmpleadoLeg.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        jTextEmpleadoLegKeyPressed(evt);
                    }
                });

                jLabel7.setText("Bonificado $");

                jLabel8.setText("Total $");

                jLabel9.setText("Saldo quincena $");

                jLabel10.setText("Tope diario bonificado $");

                jLabel11.setText("Saldo restante $");

                jLabel19.setText("%");

                jLabel27.setText("Fecha");

                javax.swing.GroupLayout jPanelModifPedLayout = new javax.swing.GroupLayout(jPanelModifPed);
                jPanelModifPed.setLayout(jPanelModifPedLayout);
                jPanelModifPedLayout.setHorizontalGroup(
                    jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelModifPedLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextEmpleadoLeg, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelNped, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)))
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                .addComponent(jLabelEmpleadoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 244, Short.MAX_VALUE)
                                .addComponent(jButtonAddItem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonDeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(23, 23, 23))
                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(jLabel27)
                                .addGap(36, 36, 36)
                                .addComponent(jLabelPedFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jLabel9))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelModifPedLayout.createSequentialGroup()
                                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                                        .addComponent(jLabel11)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                                        .addComponent(jLabel10)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jLabelTopeDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabelTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                            .addComponent(jLabelBonifMonto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabelTotalFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabelSaldoQuincena, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jButtonGuardarPed))
                                .addGap(18, 18, 18)
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                                        .addComponent(jLabelBonificado, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel19))
                                    .addComponent(jButtonCancelarPed))
                                .addGap(5, 5, 5)))
                        .addGap(15, 15, 15))
                );
                jPanelModifPedLayout.setVerticalGroup(
                    jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPedFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                            .addComponent(jLabelNped, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelEmpleadoNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jButtonDeleteItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButtonAddItem)
                                        .addComponent(jTextEmpleadoLeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabelTopeDiario, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelModifPedLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabelBonifMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelModifPedLayout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(jLabelBonificado, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel19))
                        .addGap(7, 7, 7)
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabelTotalFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabelSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabelSaldoQuincena, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanelModifPedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonGuardarPed)
                            .addComponent(jButtonCancelarPed))
                        .addContainerGap())
                );

                getContentPane().add(jPanelModifPed, "card3");

                jPanelEmpleados.setBorder(javax.swing.BorderFactory.createTitledBorder("Crear Empleado"));
                jPanelEmpleados.setToolTipText("");

                jTextEmpleadoId.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jTextEmpleadoIdActionPerformed(evt);
                    }
                });

                jLabel12.setText("Número de legajo");

                jLabel13.setText("Número de documento");

                jTextEmpleadoDNI.setPreferredSize(new java.awt.Dimension(6, 25));
                jTextEmpleadoDNI.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jTextEmpleadoDNIActionPerformed(evt);
                    }
                });

                jLabel14.setText("Apellido y nombre");

                jLabel15.setText("Nro. Tarjeta");

                jTextEmpleadoTarjeta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255)));

                jLabel16.setText("Porcentaje de bonificación");

                jLabel18.setText("Tope de bonificación diario");

                jButtonCrearEmpleado.setText("Crear");
                jButtonCrearEmpleado.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonCrearEmpleadoActionPerformed(evt);
                    }
                });

                jButtonCancelarEmpleado.setText("Cancelar");
                jButtonCancelarEmpleado.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonCancelarEmpleadoActionPerformed(evt);
                    }
                });

                jLabel32.setText("Tipo de empleado");

                jComboEmpleadoTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Quincenal", "Mensual" }));
                jComboEmpleadoTipo.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jComboEmpleadoTipoActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanelEmpleadosLayout = new javax.swing.GroupLayout(jPanelEmpleados);
                jPanelEmpleados.setLayout(jPanelEmpleadosLayout);
                jPanelEmpleadosLayout.setHorizontalGroup(
                    jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEmpleadosLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCrearEmpleado, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jButtonCancelarEmpleado)
                        .addContainerGap())
                    .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(jLabel18)
                            .addComponent(jLabel32))
                        .addGap(45, 45, 45)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                                .addComponent(jComboEmpleadoTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextEmpleadoId, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                                        .addComponent(jTextEmpleadoDNI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jTextEmpleadoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextEmpleadoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                                .addGap(516, 516, 516))
                            .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                                .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextEmpleadoBonPorc, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                                    .addComponent(jTextEmpleadoBon))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                );
                jPanelEmpleadosLayout.setVerticalGroup(
                    jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelEmpleadosLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextEmpleadoId, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextEmpleadoDNI, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextEmpleadoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextEmpleadoTarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextEmpleadoBonPorc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextEmpleadoBon, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(jComboEmpleadoTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(188, 188, 188)
                        .addGroup(jPanelEmpleadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonCrearEmpleado)
                            .addComponent(jButtonCancelarEmpleado))
                        .addContainerGap())
                );

                getContentPane().add(jPanelEmpleados, "card4");

                jPanelReporteVentasProd.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte de ventas por producto"));

                jRVPTextFechaDesde.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
                jRVPTextFechaDesde.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jRVPTextFechaDesdeActionPerformed(evt);
                    }
                });

                jLabel20.setText("Fecha Desde");

                jLabel21.setText("Fecha Hasta");

                jRVPTextFechaHasta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
                jRVPTextFechaHasta.setPreferredSize(new java.awt.Dimension(6, 27));
                jRVPTextFechaHasta.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jRVPTextFechaHastaActionPerformed(evt);
                    }
                });

                jLabel22.setText("Turno");

                jRVPComboTurno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
                jRVPComboTurno.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jRVPComboTurnoActionPerformed(evt);
                    }
                });

                jButtonGenerarReporteVentasProd.setText("Generar");
                jButtonGenerarReporteVentasProd.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonGenerarReporteVentasProdActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanelReporteVentasProdLayout = new javax.swing.GroupLayout(jPanelReporteVentasProd);
                jPanelReporteVentasProd.setLayout(jPanelReporteVentasProdLayout);
                jPanelReporteVentasProdLayout.setHorizontalGroup(
                    jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReporteVentasProdLayout.createSequentialGroup()
                        .addGroup(jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelReporteVentasProdLayout.createSequentialGroup()
                                .addGap(311, 311, 311)
                                .addComponent(jButtonGenerarReporteVentasProd))
                            .addGroup(jPanelReporteVentasProdLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRVPTextFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRVPComboTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jRVPTextFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(491, Short.MAX_VALUE))
                );
                jPanelReporteVentasProdLayout.setVerticalGroup(
                    jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReporteVentasProdLayout.createSequentialGroup()
                        .addGroup(jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jRVPTextFechaDesde, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRVPTextFechaHasta, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(jPanelReporteVentasProdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jRVPComboTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addComponent(jButtonGenerarReporteVentasProd)
                        .addGap(347, 347, 347))
                );

                getContentPane().add(jPanelReporteVentasProd, "card6");

                jPanelReporteVentaDia.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte de total de ventas por día"));

                jRVDTextFechaD.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jRVDTextFechaDActionPerformed(evt);
                    }
                });

                jRVDTextFechaH.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jRVDTextFechaHActionPerformed(evt);
                    }
                });

                jLabel23.setText("Fecha Desde");

                jLabel24.setText("Fecha Hasta");

                jButtonGenerarRVD.setText("Generar");
                jButtonGenerarRVD.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonGenerarRVDActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanelReporteVentaDiaLayout = new javax.swing.GroupLayout(jPanelReporteVentaDia);
                jPanelReporteVentaDia.setLayout(jPanelReporteVentaDiaLayout);
                jPanelReporteVentaDiaLayout.setHorizontalGroup(
                    jPanelReporteVentaDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReporteVentaDiaLayout.createSequentialGroup()
                        .addGroup(jPanelReporteVentaDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelReporteVentaDiaLayout.createSequentialGroup()
                                .addGap(245, 245, 245)
                                .addComponent(jButtonGenerarRVD))
                            .addGroup(jPanelReporteVentaDiaLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelReporteVentaDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelReporteVentaDiaLayout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(jPanelReporteVentaDiaLayout.createSequentialGroup()
                                        .addComponent(jLabel23)
                                        .addGap(3, 3, 3)))
                                .addGroup(jPanelReporteVentaDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRVDTextFechaD)
                                    .addComponent(jRVDTextFechaH, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(557, Short.MAX_VALUE))
                );
                jPanelReporteVentaDiaLayout.setVerticalGroup(
                    jPanelReporteVentaDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReporteVentaDiaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelReporteVentaDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRVDTextFechaD, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelReporteVentaDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRVDTextFechaH, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addGap(37, 37, 37)
                        .addComponent(jButtonGenerarRVD)
                        .addContainerGap(400, Short.MAX_VALUE))
                );

                getContentPane().add(jPanelReporteVentaDia, "card7");

                jPanelReporteTXT.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte para txt"));

                jLabel25.setText("Fecha Desde");

                jLabel26.setText("Fecha Hasta");

                jRTXTFd.setPreferredSize(new java.awt.Dimension(6, 27));

                jRTXTFh.setPreferredSize(new java.awt.Dimension(6, 27));

                jButtonGenerarRTXT.setText("Generar");
                jButtonGenerarRTXT.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButtonGenerarRTXTActionPerformed(evt);
                    }
                });

                jLabel33.setText("Tipo de empleado");

                jRTXTCE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Jornal", "Mensual" }));
                jRTXTCE.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jRTXTCEActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout jPanelReporteTXTLayout = new javax.swing.GroupLayout(jPanelReporteTXT);
                jPanelReporteTXT.setLayout(jPanelReporteTXTLayout);
                jPanelReporteTXTLayout.setHorizontalGroup(
                    jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReporteTXTLayout.createSequentialGroup()
                        .addGroup(jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelReporteTXTLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel25)
                                    .addComponent(jLabel26))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRTXTFd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRTXTFh, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelReporteTXTLayout.createSequentialGroup()
                                .addGap(249, 249, 249)
                                .addComponent(jButtonGenerarRTXT))
                            .addGroup(jPanelReporteTXTLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel33)
                                .addGap(18, 18, 18)
                                .addComponent(jRTXTCE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(553, Short.MAX_VALUE))
                );
                jPanelReporteTXTLayout.setVerticalGroup(
                    jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelReporteTXTLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRTXTFd, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(jRTXTFh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelReporteTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel33)
                            .addComponent(jRTXTCE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addComponent(jButtonGenerarRTXT)
                        .addGap(346, 346, 346))
                );

                getContentPane().add(jPanelReporteTXT, "card7");

                jPanelParametros.setBorder(javax.swing.BorderFactory.createTitledBorder("Parámetros"));

                jTableParam.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                    },
                    new String [] {
                        "Parámetro", "Valor"
                    }

                )
            );
            jTableParam.setEnabled(true);
            jScrollPane3.setViewportView(jTableParam);
            cargarTablaParam();

            jButtonParamGuardar.setText("Guardar");
            jButtonParamGuardar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonParamGuardarActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanelParametrosLayout = new javax.swing.GroupLayout(jPanelParametros);
            jPanelParametros.setLayout(jPanelParametrosLayout);
            jPanelParametrosLayout.setHorizontalGroup(
                jPanelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelParametrosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButtonParamGuardar)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 595, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(268, Short.MAX_VALUE))
            );
            jPanelParametrosLayout.setVerticalGroup(
                jPanelParametrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelParametrosLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(36, 36, 36)
                    .addComponent(jButtonParamGuardar)
                    .addContainerGap(333, Short.MAX_VALUE))
            );

            getContentPane().add(jPanelParametros, "card8");

            jPanelEmpleadosEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Eliminar empleado"));

            jTextEmpIdElim.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    jTextEmpIdElimFocusGained(evt);
                }
                public void focusLost(java.awt.event.FocusEvent evt) {
                    jTextEmpIdElimFocusLost(evt);
                }
            });
            jTextEmpIdElim.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jTextEmpIdElimActionPerformed(evt);
                }
            });
            jTextEmpIdElim.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    jTextEmpIdElimKeyPressed(evt);
                }
            });

            jLabel29.setText("Ingrese legajo o DNI del empleado");

            jButtonEmpElim.setText("Eliminar");
            jButtonEmpElim.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonEmpElimActionPerformed(evt);
                }
            });

            jButtonEmpElimCanc.setText("Cancelar");
            jButtonEmpElimCanc.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonEmpElimCancActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanelEmpleadosEliminarLayout = new javax.swing.GroupLayout(jPanelEmpleadosEliminar);
            jPanelEmpleadosEliminar.setLayout(jPanelEmpleadosEliminarLayout);
            jPanelEmpleadosEliminarLayout.setHorizontalGroup(
                jPanelEmpleadosEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelEmpleadosEliminarLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel29)
                    .addGap(18, 18, 18)
                    .addComponent(jTextEmpIdElim, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(45, 45, 45)
                    .addComponent(jLabelEmpElim, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(295, Short.MAX_VALUE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelEmpleadosEliminarLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonEmpElim)
                    .addGap(18, 18, 18)
                    .addComponent(jButtonEmpElimCanc)
                    .addGap(278, 278, 278))
            );
            jPanelEmpleadosEliminarLayout.setVerticalGroup(
                jPanelEmpleadosEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelEmpleadosEliminarLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addGroup(jPanelEmpleadosEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(jTextEmpIdElim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabelEmpElim, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(40, 40, 40)
                    .addGroup(jPanelEmpleadosEliminarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonEmpElim)
                        .addComponent(jButtonEmpElimCanc))
                    .addContainerGap(424, Short.MAX_VALUE))
            );

            getContentPane().add(jPanelEmpleadosEliminar, "card9");

            jPanelReporteConsumosEmpleado.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte de consumos por empleado"));

            jComboRCEEmp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));
            jComboRCEEmp.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jComboRCEEmpActionPerformed(evt);
                }
            });

            jLabel28.setText("Fecha Desde");

            jLabel30.setText("Fecha Hasta");

            jLabel31.setText("Empleado");

            jButtonRCEGen.setText("Generar");
            jButtonRCEGen.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonRCEGenActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanelReporteConsumosEmpleadoLayout = new javax.swing.GroupLayout(jPanelReporteConsumosEmpleado);
            jPanelReporteConsumosEmpleado.setLayout(jPanelReporteConsumosEmpleadoLayout);
            jPanelReporteConsumosEmpleadoLayout.setHorizontalGroup(
                jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelReporteConsumosEmpleadoLayout.createSequentialGroup()
                    .addGroup(jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanelReporteConsumosEmpleadoLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel28)
                                .addComponent(jLabel30)
                                .addComponent(jLabel31))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextRCEFD, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jTextRCEFH, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboRCEEmp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanelReporteConsumosEmpleadoLayout.createSequentialGroup()
                            .addGap(324, 324, 324)
                            .addComponent(jButtonRCEGen)))
                    .addContainerGap(478, Short.MAX_VALUE))
            );
            jPanelReporteConsumosEmpleadoLayout.setVerticalGroup(
                jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelReporteConsumosEmpleadoLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextRCEFD, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel28))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextRCEFH, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel30))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanelReporteConsumosEmpleadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jComboRCEEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel31))
                    .addGap(42, 42, 42)
                    .addComponent(jButtonRCEGen)
                    .addContainerGap(365, Short.MAX_VALUE))
            );

            getContentPane().add(jPanelReporteConsumosEmpleado, "card10");

            jPanelReporteTXTTotal.setBorder(javax.swing.BorderFactory.createTitledBorder("Reporte para txt total por empleado"));

            jLabel34.setText("Fecha Desde");

            jLabel35.setText("Fecha Hasta");

            jRTXTTFd.setPreferredSize(new java.awt.Dimension(6, 27));

            jRTXTTFh.setPreferredSize(new java.awt.Dimension(6, 27));

            jButtonGenerarRTXTTotal.setText("Generar");
            jButtonGenerarRTXTTotal.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButtonGenerarRTXTTotalActionPerformed(evt);
                }
            });

            jLabel36.setText("Tipo de empleado");

            jRTXTTCE.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Jornal", "Mensual" }));
            jRTXTTCE.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jRTXTTCEActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout jPanelReporteTXTTotalLayout = new javax.swing.GroupLayout(jPanelReporteTXTTotal);
            jPanelReporteTXTTotal.setLayout(jPanelReporteTXTTotalLayout);
            jPanelReporteTXTTotalLayout.setHorizontalGroup(
                jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelReporteTXTTotalLayout.createSequentialGroup()
                    .addGroup(jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelReporteTXTTotalLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel34)
                                .addComponent(jLabel35))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jRTXTTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRTXTTFh, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanelReporteTXTTotalLayout.createSequentialGroup()
                            .addGap(249, 249, 249)
                            .addComponent(jButtonGenerarRTXTTotal))
                        .addGroup(jPanelReporteTXTTotalLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel36)
                            .addGap(18, 18, 18)
                            .addComponent(jRTXTTCE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(553, Short.MAX_VALUE))
            );
            jPanelReporteTXTTotalLayout.setVerticalGroup(
                jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanelReporteTXTTotalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRTXTTFd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel34))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35)
                        .addComponent(jRTXTTFh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(jPanelReporteTXTTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel36)
                        .addComponent(jRTXTTCE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(19, 19, 19)
                    .addComponent(jButtonGenerarRTXTTotal)
                    .addGap(346, 346, 346))
            );

            getContentPane().add(jPanelReporteTXTTotal, "card7");

            jMenuPedidos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
            jMenuPedidos.setForeground(new java.awt.Color(153, 153, 153));
            jMenuPedidos.setText("Pedidos");
            jMenuPedidos.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jMenuPedidosMouseClicked(evt);
                }
            });
            jMenuBar1.add(jMenuPedidos);

            jMenu2.setText("Productos");
            jMenuBar1.add(jMenu2);

            jMenuEmpleados.setText("Empleados");
            jMenuEmpleados.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jMenuEmpleadosMouseClicked(evt);
                }
            });
            jMenuEmpleados.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuEmpleadosActionPerformed(evt);
                }
            });

            jMenuEmpleadoNuevo.setText("Nuevo empleado");
            jMenuEmpleadoNuevo.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jMenuEmpleadoNuevoMouseClicked(evt);
                }
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    jMenuEmpleadoNuevoMousePressed(evt);
                }
            });
            jMenuEmpleadoNuevo.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuEmpleadoNuevoActionPerformed(evt);
                }
            });
            jMenuEmpleados.add(jMenuEmpleadoNuevo);

            jMenuEmpleadoEliminar.setText("Eliminar empleado");
            jMenuEmpleadoEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jMenuEmpleadoEliminarMouseClicked(evt);
                }
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    jMenuEmpleadoEliminarMousePressed(evt);
                }
            });
            jMenuEmpleados.add(jMenuEmpleadoEliminar);

            jMenuBar1.add(jMenuEmpleados);

            jMenuReportes.setText("Reportes");
            jMenuReportes.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    jMenuReportesMousePressed(evt);
                }
            });

            jMenuRVP.setText("Reporte de ventas por producto");
            jMenuRVP.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuRVPActionPerformed(evt);
                }
            });
            jMenuReportes.add(jMenuRVP);

            jMenuRVD.setText("Reporte de ventas por día");
            jMenuRVD.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuRVDActionPerformed(evt);
                }
            });
            jMenuReportes.add(jMenuRVD);

            jMenuRTXT.setText("Reporte de ventas para TXT");
            jMenuRTXT.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jMenuRTXTActionPerformed(evt);
                }
            });
            jMenuReportes.add(jMenuRTXT);

            jMenuRTXTTotal.setText("Reporte de ventas para TXT total por empleado");
            jMenuRTXTTotal.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    jMenuRTXTTotalMousePressed(evt);
                }
            });
            jMenuReportes.add(jMenuRTXTTotal);

            jMenuRCE.setText("Reporte de consumos por empleado");
            jMenuRCE.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    jMenuRCEMousePressed(evt);
                }
            });
            jMenuReportes.add(jMenuRCE);

            jMenuBar1.add(jMenuReportes);

            jMenuParam.setText("Parámetros");
            jMenuParam.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mousePressed(java.awt.event.MouseEvent evt) {
                    jMenuParamMousePressed(evt);
                }
            });
            jMenuBar1.add(jMenuParam);

            setJMenuBar(jMenuBar1);

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

    }//GEN-LAST:event_formComponentResized

    private void jTextFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFechaActionPerformed

    }//GEN-LAST:event_jTextFechaActionPerformed

    private void jComboEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEmpleadoActionPerformed


    }//GEN-LAST:event_jComboEmpleadoActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        cargarPedidos();

    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void cargarPedidos() {
        List<Pedido> ped;
        if ((StringUtils.isNullOrEmpty(jTextNroPedido.getText()) || isInteger(jTextNroPedido.getText())) && (StringUtils.isNullOrEmpty(jTextFecha.getText()) || isDate(jTextFecha.getText()))) {
            try {
                ped = Pedidos_servicio.getInstance().recuperarTodasEnc(this.jTextNroPedido.getText(), this.jTextFecha.getText(), (String) this.jComboEmpleado.getSelectedItem());
                DefaultTableModel dtm = (DefaultTableModel) jTablePedidos.getModel();
                dtm.setRowCount(0);
                for (int i = 0; i < ped.size(); i++) {
                    dtm.addRow(new Object[]{
                        ped.get(i).getIdPedido(),
                        ped.get(i).getFecha(),
                        ped.get(i).getEmpleado().getNombreEmpleado()

                    });

                }

            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
                JOptionPane.showMessageDialog(this, "Ha surgido un error y no se han podido recuperar los registros");
            }
        } else {
            jTextNroPedido.setText("");
            jTextFecha.setText("");
            JOptionPane.showMessageDialog(this, "Alguno de los datos ingresados no son válidos");
        }
    }

    private void completarProducto() {
        if (!StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(), 0)))) {
            if (isAlphaNumeric(String.valueOf(jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(), 0)))) {
                String prod = jTableEditPed.getValueAt(jTableEditPed.getSelectedRow(), 0).toString();
                Producto p = null;
                jTableEditPed.setValueAt("", jTableEditPed.getSelectedRow(), 3);
                try {
                    if (prod.length() > 0) {
                        if (isNumeric(prod)) {//compruebo si es numérico para ver si busco por id o descripción
                            p = Productos_servicio.getInstance().recuperarPorId(Integer.valueOf(prod));
                            if (p == null) {
                                JOptionPane.showMessageDialog(this, "El código de producto ingresado no existe", "Error", JOptionPane.WARNING_MESSAGE);
                                blanquearFila();
                            } else {
                                completarFila(p);
                            }
                        } else {
                            p = Productos_servicio.getInstance().recuperarPorDescripcion(prod);
                            if (p == null) {
                                JOptionPane.showMessageDialog(this, "El producto ingresado no existe", "Error", JOptionPane.WARNING_MESSAGE);
                                blanquearFila();
                            } else {
                                jTableEditPed.setValueAt(p.getIdProducto(), jTableEditPed.getSelectedRow(), 0);
                            }
                        }
                    } else {
                        blanquearFila();
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                    blanquearFila();
                }
            } else {
                JOptionPane.showMessageDialog(this, "El producto ingresado no existe", "Error", JOptionPane.WARNING_MESSAGE);
                blanquearFila();
            }
        }
    }

    private void blanquearProducto() {
        jTableEditPed.setValueAt("", jTableEditPed.getSelectedRow(), 0);
    }

    private void completarFila(Producto p) {
        jTableEditPed.setValueAt(p.getDescripcion(), jTableEditPed.getSelectedRow(), 1);
        jTableEditPed.setValueAt(p.getPrecio(), jTableEditPed.getSelectedRow(), 2);
        jTableEditPed.setCellSelectionEnabled(true);
        jTableEditPed.requestFocus();
        jTableEditPed.changeSelection(jTableEditPed.getSelectedRow(), 3, false, false);
    }

    private void blanquearFila() {
        jTableEditPed.setValueAt("", jTableEditPed.getSelectedRow(), 0);
        jTableEditPed.setValueAt("", jTableEditPed.getSelectedRow(), 1);
        jTableEditPed.setValueAt("", jTableEditPed.getSelectedRow(), 2);
        jTableEditPed.setValueAt("", jTableEditPed.getSelectedRow(), 3);
        jTableEditPed.setValueAt("", jTableEditPed.getSelectedRow(), 4);
        jTableEditPed.setCellSelectionEnabled(true);
        jTableEditPed.requestFocus();
        jTableEditPed.changeSelection(jTableEditPed.getSelectedRow(), 0, false, false);
    }

    private void limpiarPantallaNuevoPed() {
        mostrarPanel(jPanelBusqPed, jMenuPedidos);
        jTextEmpleadoLeg.setText("");//Limpio legajo y nombre del empleado
        jLabelEmpleadoNombre.setText("");
        DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
        while (model.getRowCount() > 0) {
            for (int i = 0; i < model.getRowCount(); i++) {
                model.removeRow(i);
            }
        }
        model.addRow(new Object[]{"", "", "", ""});
        jLabelTotal.setText(Integer.toString(0));
        jLabelBonifMonto.setText("0.0");
        jLabelBonificado.setText("0.0");
        jLabelSaldo.setText("0.0");
        jLabelSaldoQuincena.setText("0.0");
        jLabelTopeDiario.setText("0.0");
        jLabelTotalFinal.setText("0.0");
        jButtonGuardarPed.setEnabled(false);

    }

    private void jButtonNuevoPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoPedActionPerformed
        cargarPantallaNuevoPed();
    }//GEN-LAST:event_jButtonNuevoPedActionPerformed

    private void cargarPantallaNuevoPed() {
        mostrarPanel(jPanelModifPed, jMenuPedidos);
        ped = null;
        jPanelModifPed.setBorder(javax.swing.BorderFactory.createTitledBorder("Nuevo Pedido"));
        String ped = "";
        try {
            ped = Pedidos_servicio.getInstance().recuperarIdNuevoPed();
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabelNped.setText(ped);
        jTextEmpleadoLeg.setEditable(true);
        jLabelPedFecha.setText(new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(Calendar.getInstance().getTime()));
        jLabelBonifMonto.setText("0.0");
        jLabelBonificado.setText("0.0");
        jLabelSaldo.setText("0.0");
        jLabelSaldoQuincena.setText("0.0");
        jLabelTopeDiario.setText("0.0");
        jLabelTotalFinal.setText("0.0");
        jTextEmpleadoLeg.requestFocusInWindow();

    }

    private void agregarFila() {

        DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
        model.addRow(new Object[]{"", "", "", "", ""});
    }

    private void completaValoresEmpleado(Empleado emp) {
        Double saldo;
        jLabelEmpleadoNombre.setText(emp.getNombreEmpleado());
        jTextEmpleadoLeg.setText(String.valueOf(emp.getIdEmpleado()));
        jLabelBonificado.setText(String.valueOf(emp.getBonificacion()));
        jLabelTopeDiario.setText(String.valueOf(emp.getBonifTope()));
        saldo = Double.valueOf(emp.getBonifTope()) - Pedidos_servicio.getInstance().recuperarTotalBonificaciones(emp.getIdEmpleado(), ped);
        if (saldo < 0.0) {
            saldo = 0.0;
        }
        jLabelSaldo.setText(String.valueOf(saldo));
        jLabelBonifMonto.setText("");
        jLabelTotalFinal.setText("");
        jLabelSaldoQuincena.setText("");
        jTableEditPed.setCellSelectionEnabled(true);
        jTableEditPed.changeSelection(0, 0, false, false);
        jTableEditPed.requestFocus();
        recalculaTotal();
    }

    private boolean tablaCompleta() {
        DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (!StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(i, 0))) && (StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(i, 3))) || !isNumeric(String.valueOf(jTableEditPed.getValueAt(i, 3))))) {
                return false;
            }
        }
        return true;
    }

    private void jMenuEmpleadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEmpleadosActionPerformed

    }//GEN-LAST:event_jMenuEmpleadosActionPerformed

    private void jMenuEmpleadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEmpleadosMouseClicked


    }//GEN-LAST:event_jMenuEmpleadosMouseClicked

    private void jMenuPedidosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuPedidosMouseClicked
        limpiarPantallaNuevoPed();
        cargarPantallaNuevoPed();
    }//GEN-LAST:event_jMenuPedidosMouseClicked

    private void jTextEmpleadoIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEmpleadoIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEmpleadoIdActionPerformed

    private void jTextEmpleadoDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEmpleadoDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEmpleadoDNIActionPerformed

    private void jButtonCrearEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCrearEmpleadoActionPerformed
        String tar = null;
        if (!jTextEmpleadoBon.getText().equals("") && !jTextEmpleadoBonPorc.getText().equals("") && !jTextEmpleadoId.getText().equals("") && !jTextEmpleadoDNI.getText().equals("") && !jTextEmpleadoNombre.getText().equals("")) {
            if (formatoEmpleado()) {
                if (jTextEmpleadoTarjeta.getText() != "") {
                    tar = jTextEmpleadoTarjeta.getText();
                }
                String tipo = null;
                if(jComboEmpleadoTipo.getSelectedItem().toString() == "Quincenal"){
                    tipo = "Q";
                }
                else{
                    tipo = "M";
                }
                Empleados_servicio.getInstance().guardarEmpleado(Integer.valueOf(jTextEmpleadoId.getText()), jTextEmpleadoNombre.getText(), Integer.valueOf(jTextEmpleadoDNI.getText()), tar, Double.valueOf(jTextEmpleadoBonPorc.getText()), Double.valueOf(jTextEmpleadoBon.getText()),tipo);
                JOptionPane.showMessageDialog(this, "El empleado fue creado correctamente", "Empleados", JOptionPane.INFORMATION_MESSAGE);
                limpiarPantallaEmpleado();
            } else {
                JOptionPane.showMessageDialog(this, "Verifique los datos ingresados", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonCrearEmpleadoActionPerformed
    private boolean formatoEmpleado() {
        if (!isNumeric(jTextEmpleadoBon.getText())) {
            return false;
        }
        if (!isNumeric(jTextEmpleadoBonPorc.getText()) || Double.valueOf(jTextEmpleadoBonPorc.getText()) > 100 || Double.valueOf(jTextEmpleadoBonPorc.getText()) < 0) {
            return false;
        }
        if (!isInteger(jTextEmpleadoId.getText())) {
            return false;
        }
        if (!isInteger(jTextEmpleadoDNI.getText())) {
            return false;
        }
        if (!isAlphaNumericComma(jTextEmpleadoNombre.getText())) {
            return false;
        }
        if (!isAlphaNumeric(jTextEmpleadoTarjeta.getText())) {
            return false;
        }
        return true;
    }
    private void jButtonCancelarEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarEmpleadoActionPerformed
        limpiarPantallaEmpleado();
        mostrarPanel(jPanelModifPed, jMenuPedidos);
    }//GEN-LAST:event_jButtonCancelarEmpleadoActionPerformed

    private void jRVPTextFechaDesdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRVPTextFechaDesdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRVPTextFechaDesdeActionPerformed

    private void jRVPTextFechaHastaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRVPTextFechaHastaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRVPTextFechaHastaActionPerformed

    private void jButtonGenerarReporteVentasProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarReporteVentasProdActionPerformed
        if (!jRVPTextFechaDesde.getText().equals("") && !jRVPTextFechaHasta.getText().equals("")) {
            String[] param = new String[3];
            param[0] = jRVPTextFechaDesde.getText();
            param[1] = jRVPTextFechaHasta.getText();
            param[2] = jRVPComboTurno.getSelectedItem().toString();
            new Reportes("ReporteVentasProducto", param);
        }
    }//GEN-LAST:event_jButtonGenerarReporteVentasProdActionPerformed

    private void jRVPComboTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRVPComboTurnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRVPComboTurnoActionPerformed

    private void jRVDTextFechaDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRVDTextFechaDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRVDTextFechaDActionPerformed

    private void jRVDTextFechaHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRVDTextFechaHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRVDTextFechaHActionPerformed

    private void jButtonGenerarRVDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarRVDActionPerformed
        if (!jRVDTextFechaD.getText().equals("") && !jRVDTextFechaH.getText().equals("") && isDate(jRVDTextFechaD.getText()) && isDate(jRVDTextFechaH.getText())) {
            String[] param = new String[2];
            param[0] = jRVDTextFechaD.getText();
            param[1] = jRVDTextFechaH.getText();
            new Reportes("ReporteVentasDia", param);
        }
    }//GEN-LAST:event_jButtonGenerarRVDActionPerformed

    private void jMenuRVDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRVDActionPerformed
        mostrarPanel(jPanelReporteVentaDia, jMenuReportes);
    }//GEN-LAST:event_jMenuRVDActionPerformed

    private void jMenuRVPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRVPActionPerformed
        mostrarPanel(jPanelReporteVentasProd, jMenuReportes);
        cargarComboUsuario(jRVPComboTurno);
    }//GEN-LAST:event_jMenuRVPActionPerformed

    private void jMenuRTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRTXTActionPerformed
        mostrarPanel(jPanelReporteTXT, jMenuReportes);
    }//GEN-LAST:event_jMenuRTXTActionPerformed

    private void jButtonGenerarRTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarRTXTActionPerformed
        if (!jRTXTFd.getText().equals("") && !jRTXTFh.getText().equals("") && isDate(jRTXTFd.getText()) && isDate(jRTXTFh.getText())) {
            String[] param = new String[3];
            param[0] = jRTXTFd.getText();
            param[1] = jRTXTFh.getText();
            switch(jRTXTCE.getSelectedItem().toString()){
                case "Jornal": param[2]="'J'"; break;
                case "Mensual": param[2]="'M'"; break;
                default: param[2]="'M','J'"; break;
            }   
            new Reportes("ReporteTXT", param);
        }
    }//GEN-LAST:event_jButtonGenerarRTXTActionPerformed

    private void jTextEmpleadoLegKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextEmpleadoLegKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !StringUtils.isNullOrEmpty(jTextEmpleadoLeg.getText())) {
            buscarLegajoEmp();
        }
    }//GEN-LAST:event_jTextEmpleadoLegKeyPressed

    private void buscarLegajoEmp() throws HeadlessException {
        Empleado emp = null;
        Double saldo = 0.0;
        if (!StringUtils.isNullOrEmpty(jTextEmpleadoLeg.getText())) {
            if (isNumeric(jTextEmpleadoLeg.getText())) {
                try {
                    emp = Empleados_servicio.getInstance().recuperarEmpPorIdTarj(jTextEmpleadoLeg.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (emp != null) {
                    completaValoresEmpleado(emp);
                } else {
                    jTextEmpleadoLeg.setText("");
                    jLabelEmpleadoNombre.setText("");
                    JOptionPane.showMessageDialog(jPanelModifPed, "No se ha encontrado el legajo ingresado");
                }
            } else {
                jTextEmpleadoLeg.setText("");
                jLabelEmpleadoNombre.setText("");
                JOptionPane.showMessageDialog(jPanelModifPed, "No se ha encontrado el legajo ingresado");
            }
        }
    }

    private void jButtonDeleteItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteItemActionPerformed
        if (jTableEditPed.getRowCount() > 1) {
            ((DefaultTableModel) jTableEditPed.getModel()).removeRow(jTableEditPed.getSelectedRow());
            recalculaTotal();
        }
    }//GEN-LAST:event_jButtonDeleteItemActionPerformed

    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
        agregarFila();
    }//GEN-LAST:event_jButtonAddItemActionPerformed

    private void jButtonCancelarPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarPedActionPerformed
        limpiarPantallaNuevoPed();
    }//GEN-LAST:event_jButtonCancelarPedActionPerformed

    private void jButtonGuardarPedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarPedActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
        Producto prod = null;
        Empleado emp = null;
        if (tablaCompleta() && !StringUtils.isNullOrEmpty(jTextEmpleadoLeg.getText()) && !StringUtils.isNullOrEmpty(jLabelEmpleadoNombre.getText())) {
            try {
                Conexion.getConnection().setAutoCommit(false);
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
            String idPedido = jLabelNped.getText();
            recalculaTotal();
            if (jLabelTotal.getText().equals("") || jLabelTotal.getText().equals("0.0")) {
                JOptionPane.showMessageDialog(this, "No hay productos cargados para generar el pedido", "Error", JOptionPane.WARNING_MESSAGE);
                return;
            }
            if (ped == null) {
                /**
                 * **************NUEVO************
                 */
                try {
                    emp = Empleados_servicio.getInstance().recuperarEmpPorIdTarj(jTextEmpleadoLeg.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }

                Pedidos_servicio.getInstance().guardarPedidoCab(idPedido, emp.getIdEmpleado().toString(), jLabelBonifMonto.getText(), jLabelTotal.getText(), 0, Usuarios_servicio.getInstance().getUsuarioLogeado());

            } else {
                /**
                 * **************MODIFICACION************
                 */
                Pedidos_servicio.getInstance().borrarPedidoDet(idPedido);
                Pedidos_servicio.getInstance().actualizarTotalBonif(ped.getIdPedido(), Double.valueOf(jLabelTotal.getText()), Double.valueOf(jLabelBonifMonto.getText()));
            }
            for (int i = 0; i < model.getRowCount(); i++) {
                if (!StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(i, 0))) && !StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(i, 1))) && !StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(i, 2))) && !StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(i, 3))) && !StringUtils.isNullOrEmpty(String.valueOf(jTableEditPed.getValueAt(i, 4)))) {
                    try {
                        prod = (Producto) Productos_servicio.getInstance().recuperarPorId(Integer.valueOf(jTableEditPed.getValueAt(i, 0).toString()));
                    } catch (SQLException ex) {
                        Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    Pedidos_servicio.getInstance().guardarPedidoDet(idPedido, prod.getIdProducto().toString(), prod.getPrecio().toString(), (String) jTableEditPed.getValueAt(i, 3).toString());
                }
            }
            try {
                Conexion.getConnection().commit();
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
            Pedido pedido;
            try {
                pedido = Pedidos_servicio.getInstance().recuperarPedidoCompleto(idPedido);
                Impresion_servicio.getInstance().imprimirPedido(pedido);
                Impresion_servicio.getInstance().imprimirPedido(pedido);
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
            limpiarPantallaNuevoPed();
            cargarPantallaNuevoPed();
        } else {
            JOptionPane.showMessageDialog(this, "Falta el legajo del empleado o no se ha indicado cantidad para algún producto en el pedido");
        }
    }//GEN-LAST:event_jButtonGuardarPedActionPerformed

    private void jMenuParamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuParamMousePressed
        mostrarPanel(jPanelParametros, jMenuParam);
    }//GEN-LAST:event_jMenuParamMousePressed

    private void jButtonParamGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonParamGuardarActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTableParam.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            Parametros_servicio.getInstance().guardarParametro(jTableParam.getValueAt(i, 0).toString(), jTableParam.getValueAt(i, 1).toString());
        }
        JOptionPane.showMessageDialog(this, "Los valores de parámetros fueron actualizados correctamente", "Parámetros", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jButtonParamGuardarActionPerformed

    private void jTextEmpleadoLegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEmpleadoLegActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEmpleadoLegActionPerformed

    private void jMenuEmpleadoNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuEmpleadoNuevoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuEmpleadoNuevoActionPerformed

    private void jMenuEmpleadoNuevoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEmpleadoNuevoMouseClicked

    }//GEN-LAST:event_jMenuEmpleadoNuevoMouseClicked

    private void jMenuEmpleadoEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEmpleadoEliminarMouseClicked

    }//GEN-LAST:event_jMenuEmpleadoEliminarMouseClicked

    private void jButtonEmpElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmpElimActionPerformed
        Empleado emp = null;
        if (!StringUtils.isNullOrEmpty(jTextEmpIdElim.getText())) {
            if (isInteger(jTextEmpIdElim.getText())) {
                try {
                    emp = Empleados_servicio.getInstance().recuperarEmpPorIdTarj(jTextEmpIdElim.getText());
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (emp != null) {
                    jLabelEmpElim.setText(emp.getNombreEmpleado());
                    jTextEmpIdElim.setText(String.valueOf(emp.getIdEmpleado()));
                    Empleados_servicio.getInstance().eliminarEmpleado(Integer.valueOf(jTextEmpIdElim.getText()));
                    JOptionPane.showMessageDialog(this, "El empleado " + jLabelEmpElim.getText() + " ha sido eliminado exitosamente", "", JOptionPane.INFORMATION_MESSAGE);
                    jTextEmpIdElim.setText("");
                    jLabelEmpElim.setText("");
                    jButtonEmpElim.setEnabled(false);
                } else {
                    JOptionPane.showMessageDialog(jPanelModifPed, "No se ha encontrado el legajo ingresado");
                    jTextEmpIdElim.setText("");
                    jLabelEmpElim.setText("");
                    jButtonEmpElim.setEnabled(false);
                }
            } else {
                JOptionPane.showMessageDialog(jPanelModifPed, "No se ha encontrado el legajo ingresado");
                jTextEmpIdElim.setText("");
                jLabelEmpElim.setText("");
                jButtonEmpElim.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jButtonEmpElimActionPerformed

    private void jButtonEmpElimCancActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmpElimCancActionPerformed
        jTextEmpIdElim.setText("");
        jLabelEmpElim.setText("");
        jButtonEmpElim.setEnabled(false);
    }//GEN-LAST:event_jButtonEmpElimCancActionPerformed

    private void jTextEmpIdElimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextEmpIdElimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextEmpIdElimActionPerformed

    private void jTextEmpIdElimKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextEmpIdElimKeyPressed
        Empleado emp = null;
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && !StringUtils.isNullOrEmpty(jTextEmpIdElim.getText()) && isInteger(jTextEmpIdElim.getText())) {
            try {
                emp = Empleados_servicio.getInstance().recuperarEmpPorIdTarj(jTextEmpIdElim.getText());
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (emp != null) {
                jLabelEmpElim.setText(emp.getNombreEmpleado());
                jTextEmpIdElim.setText(String.valueOf(emp.getIdEmpleado()));
                jButtonEmpElim.setEnabled(true);
            } else {
                JOptionPane.showMessageDialog(jPanelModifPed, "No se ha encontrado el legajo ingresado");
                jTextEmpIdElim.setText("");
                jLabelEmpElim.setText("");
                jButtonEmpElim.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTextEmpIdElimKeyPressed

    private void jMenuEmpleadoNuevoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEmpleadoNuevoMousePressed
        mostrarPanel(jPanelEmpleados, jMenuEmpleados);
    }//GEN-LAST:event_jMenuEmpleadoNuevoMousePressed

    private void jMenuEmpleadoEliminarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuEmpleadoEliminarMousePressed
        mostrarPanel(jPanelEmpleadosEliminar, jMenuEmpleados);
        jButtonEmpElim.setEnabled(false);
    }//GEN-LAST:event_jMenuEmpleadoEliminarMousePressed

    private void jMenuRCEMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuRCEMousePressed
        mostrarPanel(jPanelReporteConsumosEmpleado, jMenuReportes);
        jComboRCEEmp.removeAllItems();
        cargarComboEmpleado(jComboRCEEmp);
    }//GEN-LAST:event_jMenuRCEMousePressed

    private void jMenuReportesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuReportesMousePressed

    }//GEN-LAST:event_jMenuReportesMousePressed

    private void jComboRCEEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboRCEEmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboRCEEmpActionPerformed

    private void jButtonRCEGenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRCEGenActionPerformed
        if (!jTextRCEFD.getText().equals("") && !jTextRCEFH.getText().equals("") && isDate(jTextRCEFD.getText()) && isDate(jTextRCEFH.getText())) {
            Empleado emp = null;
            String[] param = new String[4];
            param[0] = jTextRCEFD.getText();
            param[1] = jTextRCEFH.getText();
            param[2] = null;
            param[3] = null;
            if (!jComboRCEEmp.getSelectedItem().toString().equals("")) {
                try {
                    emp = Empleados_servicio.getInstance().recuperarEmpPorDescripcion(jComboRCEEmp.getSelectedItem().toString());
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }
                param[2] = emp.getIdEmpleado().toString();
                param[3] = emp.getIdEmpleado().toString() + "-" + emp.getNombreEmpleado();
            }
            new Reportes("ReporteConsumosEmpleado", param);
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese los campos obligatorios: Fecha Desde y Fecha Hasta");
        }
    }//GEN-LAST:event_jButtonRCEGenActionPerformed

    private void jTextEmpIdElimFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextEmpIdElimFocusLost
        if (jTextEmpIdElim.getText().equals("")) {
            jButtonEmpElim.setEnabled(false);
            jLabelEmpElim.setText("");
        }

    }//GEN-LAST:event_jTextEmpIdElimFocusLost

    private void jTextEmpleadoLegFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextEmpleadoLegFocusLost
        if (ped == null) { //para que en la modificación no lo haga
            if (StringUtils.isNullOrEmpty(jLabelEmpleadoNombre.getText()) && StringUtils.isNullOrEmpty(jTextEmpleadoLeg.getText())) {
                jTextEmpleadoLeg.requestFocusInWindow();
            } else {
                buscarLegajoEmp();
            }
        }
    }//GEN-LAST:event_jTextEmpleadoLegFocusLost

    private void jTextEmpleadoLegFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextEmpleadoLegFocusGained
        if (ped == null) { //para que en la modificación no lo haga
            jLabelEmpleadoNombre.setText("");
        }
    }//GEN-LAST:event_jTextEmpleadoLegFocusGained

    private void jTextEmpIdElimFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextEmpIdElimFocusGained

    }//GEN-LAST:event_jTextEmpIdElimFocusGained

    private void jComboEmpleadoTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboEmpleadoTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboEmpleadoTipoActionPerformed

    private void jRTXTCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRTXTCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRTXTCEActionPerformed

    private void jButtonGenerarRTXTTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarRTXTTotalActionPerformed
        if (!jRTXTTFd.getText().equals("") && !jRTXTTFh.getText().equals("") && isDate(jRTXTTFd.getText()) && isDate(jRTXTTFh.getText())) {
            String[] param = new String[3];
            param[0] = jRTXTTFd.getText();
            param[1] = jRTXTTFh.getText();
            switch(jRTXTTCE.getSelectedItem().toString()){
                case "Jornal": param[2]="'J'"; break;
                case "Mensual": param[2]="'M'"; break;
                default: param[2]="'M','J'"; break;
            }   
            new Reportes("ReporteTXTTotal", param);
        }
    }//GEN-LAST:event_jButtonGenerarRTXTTotalActionPerformed

    private void jRTXTTCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRTXTTCEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRTXTTCEActionPerformed

    private void jMenuRTXTTotalMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuRTXTTotalMousePressed
        mostrarPanel(jPanelReporteTXTTotal,jMenuReportes);
    }//GEN-LAST:event_jMenuRTXTTotalMousePressed

    private void cargarComboUsuario(JComboBox combo) {
        List<Usuario> usr = null;
        combo.removeAllItems();
        try {
            usr = Usuarios_servicio.getInstance().recuperarTodas();
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        for (Usuario usu : usr) {
            combo.addItem(usu.getNombreUsuario());

        }
        combo.insertItemAt("", 0);
        combo.setSelectedIndex(0);

    }

    public static boolean isNumeric(String str) {
        return str.matches("-?\\d+(\\.\\d+)?");  //match a number with optional '-' and decimal.
    }

    public static boolean isAlphaNumeric(String str) {
        return str.matches("^[a-zA-Z0-9]*$");
    }
    
    public static boolean isAlphaNumericComma(String str) {
        return str.matches("^[a-zA-Z0-9,. ]*$");
    }

    public boolean isInteger(String input) { //Pass in string
        try { //Try to make the input into an integer
            Integer.parseInt(input);
            return true; //Return true if it works
        } catch (Exception e) {
            return false; //If it doesn't work return false
        }
    }

    public static boolean isDate(String str) {
        return str.matches("[0-9]{1,2}(/)[0-9]{1,2}(/)[0-9]{4}");
    }

    public void limpiarPantallaEmpleado() {
        jTextEmpleadoId.setText("");
        jTextEmpleadoBon.setText("");
        jTextEmpleadoBonPorc.setText("");
        jTextEmpleadoDNI.setText("");
        jTextEmpleadoLeg.setText("");
        jTextEmpleadoNombre.setText("");
        jTextEmpleadoTarjeta.setText("");
    }

    private void mostrarPanel(JPanel panel, JMenu menu) {
        jPanelEmpleados.setVisible(false);
        jPanelBusqPed.setVisible(false);
        jPanelModifPed.setVisible(false);
        jPanelReporteVentaDia.setVisible(false);
        jPanelReporteVentasProd.setVisible(false);
        jPanelReporteTXT.setVisible(false);
        jPanelParametros.setVisible(false);
        jPanelEmpleadosEliminar.setVisible(false);
        jPanelReporteConsumosEmpleado.setVisible(false);
        jPanelReporteTXTTotal.setVisible(false);
        jMenuEmpleados.setForeground(Color.BLACK);
        jMenuPedidos.setForeground(Color.BLACK);
        jMenuReportes.setForeground(Color.BLACK);
        jMenuParam.setForeground(Color.BLACK);
        panel.setVisible(true);
        menu.setForeground(Color.GRAY);

    }

    private void cargarComboEmpleado(JComboBox combo) {
        try {
            List<Empleado> empleados;
            empleados = Empleados_servicio.getInstance().recuperarTodas();
            for (int i = 0; i < empleados.size(); i++) {
                combo.addItem(empleados.get(i).toString());

            }
            combo.insertItemAt("", 0);
            combo.setSelectedIndex(0);

        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void recalculaTotal() {
        Double total = 0.0;
        Double parcial = 0.0;
        if (jTableEditPed.getValueAt(0, 0) != null) { //primero chequeo que haya filas con datos en la tabla de productos
            for (int i = 0; i < jTableEditPed.getRowCount(); i++) {
                if (jTableEditPed.getValueAt(i, 4) != null && jTableEditPed.getValueAt(i, 0).toString().length() > 0 && jTableEditPed.getValueAt(i, 4).toString().length() > 0 && jTableEditPed.getValueAt(i, 4).toString() != "") {
                    parcial = Double.valueOf(jTableEditPed.getValueAt(i, 4).toString());
                    total = total + parcial;
                }
            }

            jLabelTotal.setText(Double.toString(total));
            Double bonif = Double.valueOf(jLabelTotal.getText()) * (Double.valueOf(jLabelBonificado.getText())) / 100.00;
            if (bonif > Double.valueOf(jLabelSaldo.getText())) {
                bonif = Double.valueOf(jLabelSaldo.getText());
            }
            jLabelBonifMonto.setText(String.valueOf(bonif));
            Double totF = total - bonif;
            jLabelTotalFinal.setText(String.valueOf(totF));
            String fechaCorte = Parametros_servicio.getInstance().recuperarValorPorCodigo("quincena");
            Double saldo = Pedidos_servicio.getInstance().recuperarTotalEmpleado(Integer.valueOf(jTextEmpleadoLeg.getText()), fechaCorte, ped) + totF;
            jLabelSaldoQuincena.setText(String.valueOf(saldo));
            jButtonGuardarPed.setEnabled(true);
        }

    }

    private void cargarTablaParam() {
        List<Parametros> par;
        par = Parametros_servicio.getInstance().recuperarTodos();
        DefaultTableModel dtm = (DefaultTableModel) jTableParam.getModel();
        dtm.setRowCount(0);
        for (int i = 0; i < par.size(); i++) {
            dtm.addRow(new Object[]{
                par.get(i).getCodigo(),
                par.get(i).getValor()

            });
        }

    }

    /**
     * @param args the command line arguments
     * @throws java.sql.SQLException
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedidos().setVisible(true);
            }
        });

    }

    /**
     * ** NICO ***
     */
    public class DeleteCellRenderer extends DefaultTableCellRenderer {

        public DeleteCellRenderer() {
            setHorizontalAlignment(JLabel.CENTER);
            try {
                Image img = ImageIO.read(getClass().getResource("/Imagenes/trash.png"));
                ImageIcon imageIcon = new ImageIcon(img.getScaledInstance(24, 24, Image.SCALE_SMOOTH));
                setIcon(imageIcon);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            setText(null);
            if (value instanceof Boolean && (Boolean) value) {
                setEnabled(true);
            } else {
                setEnabled(false);
            }
            return this;
        }
    }

    public class DeleteCellEditor extends AbstractCellEditor implements TableCellEditor {

        private JLabel label;

        public DeleteCellEditor() {
            label = new JLabel("");
            label.setHorizontalAlignment(JLabel.CENTER);
            try {
                Image img = ImageIO.read(getClass().getResource("/Imagenes/trash.png"));
                ImageIcon imageIcon = new ImageIcon(img.getScaledInstance(24, 24, Image.SCALE_SMOOTH));
                label.setIcon(imageIcon);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

        @Override
        public Object getCellEditorValue() {
            final int fila = jTablePedidos.getSelectedRow();
            eliminarPedido(fila);
            return true;
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    stopCellEditing();
                }
            });
            return label;
        }

        @Override
        public boolean isCellEditable(EventObject e) {
            return true;
        }
    }

    public class EditCellRenderer extends DefaultTableCellRenderer {

        public EditCellRenderer() {
            setHorizontalAlignment(JLabel.CENTER);
            try {
                Image img = ImageIO.read(getClass().getResource("/Imagenes/pencil.png"));
                ImageIcon imageIcon = new ImageIcon(img.getScaledInstance(24, 24, Image.SCALE_SMOOTH));
                setIcon(imageIcon);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            setText(null);
            if (value instanceof Boolean && (Boolean) value) {
                setEnabled(true);
            } else {
                setEnabled(false);
            }
            return this;
        }
    }

    public class EditCellEditor extends AbstractCellEditor implements TableCellEditor {

        private JLabel label;

        public EditCellEditor() {
            label = new JLabel("");
            label.setHorizontalAlignment(JLabel.CENTER);
            try {
                Image img = ImageIO.read(getClass().getResource("/Imagenes/pencil.png"));
                ImageIcon imageIcon = new ImageIcon(img.getScaledInstance(24, 24, Image.SCALE_SMOOTH));
                label.setIcon(imageIcon);
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }

        @Override
        public Object getCellEditorValue() {
            ped = null;
            final int fila = jTablePedidos.getSelectedRow();
            try {
                ped = Pedidos_servicio.getInstance().recuperarPedidoCompleto(jTablePedidos.getValueAt(fila, 0).toString());
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
            modificarPedido(fila);
            return true;
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            SwingUtilities.invokeLater(new Runnable() {
                @Override
                public void run() {
                    stopCellEditing();
                }
            });
            return label;
        }

        @Override
        public boolean isCellEditable(EventObject e) {
            return true;
        }
    }

    private void modificarPedido(final int fila) {
        /*++++++++++++++++++++++++++++++++++++++++++++++++
        ++++++++++++++++++MODIFICAR PEDIDO++++++++++++++++
        ++++++++++++++++++++++++++++++++++++++++++++++++*/
        Date fechaPed = null;
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            fechaPed = sdf.parse(jTablePedidos.getValueAt(fila, 1).toString());
        } catch (ParseException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
        SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
        if (sdf.format(fechaPed).equals(sdf.format(new Date()))) {
            mostrarPanel(jPanelModifPed, jMenuPedidos);
            jPanelModifPed.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificar Pedido"));
            jLabelNped.setText(ped.getIdPedido().toString());
            jTextEmpleadoLeg.setText(String.valueOf(ped.getEmpleado().getIdEmpleado()));
            jLabelPedFecha.setText(ped.getFecha());
            jTextEmpleadoLeg.setEditable(false);
            jLabelEmpleadoNombre.setText(ped.getEmpleado().getNombreEmpleado());
            DefaultTableModel model = (DefaultTableModel) jTableEditPed.getModel();
            model.removeRow(0);
            for (DetallePedido det : ped.getDetallesPedido()) {

                model.addRow(new Object[]{det.getProducto().getIdProducto(), det.getProducto().getDescripcion(), det.getPrecio().toString(), det.getCantidad().toString(), String.valueOf(det.getCantidad() * det.getPrecio())});

            }
            completaValoresEmpleado(ped.getEmpleado());
            //recalculaTotal();
        } else {
            JOptionPane.showMessageDialog(Pedidos.this, "No puede modificar pedidos de otro día", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }

    private void eliminarPedido(final int fila) {
        int n = JOptionPane.showConfirmDialog(jPanelBusqPed, "Seguro?", "Borrar pedido", JOptionPane.YES_NO_OPTION);
        if (n == JOptionPane.YES_OPTION) {
            /*++++++++++++++++++++++++++++++++++++++++++++++++
            ++++++++++++++++++ELIMINAR PEDIDO++++++++++++++++
            ++++++++++++++++++++++++++++++++++++++++++++++++*/
            try {
                Conexion.getConnection().setAutoCommit(false);
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }

            Pedidos_servicio.getInstance().borrarPedidoCab(String.valueOf(jTablePedidos.getValueAt(fila, 0)));
            try {
                Conexion.getConnection().commit();
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }

            final ScheduledThreadPoolExecutor executor = new ScheduledThreadPoolExecutor(1);
            executor.schedule(new Runnable() {
                @Override
                public void run() {
                    borrarPedido(fila);
                }
            }, 2, TimeUnit.SECONDS);

            JOptionPane.showMessageDialog(jPanelBusqPed, "Se ha eliminado el pedido con éxito");
            Pedido pedido = null;
            try {
                pedido = Pedidos_servicio.getInstance().recuperarPedidoCompleto(String.valueOf(jTablePedidos.getValueAt(fila, 0)));
            } catch (SQLException ex) {
                Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
            Impresion_servicio.getInstance().imprimirPedido(pedido);
        }
    }

    /**
     * ** NICO ***
     */
    class ButtonRenderer extends JButton implements TableCellRenderer {

        public ButtonRenderer() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable table, Object value,
                boolean isSelected, boolean hasFocus, int row, int column) {
            if (isSelected) {
                setForeground(table.getSelectionForeground());
                setBackground(table.getSelectionBackground());
            } else {
                setForeground(table.getForeground());
                setBackground(UIManager.getColor("Button.background"));
            }
            setText((value == null) ? "" : value.toString());
            return this;
        }
    }

    private void borrarPedido(int fila) {
        ((DefaultTableModel) jTablePedidos.getModel()).removeRow(fila);
    }

    /**
     * @version 1.0 11/09/98
     */
    class ButtonEditor extends DefaultCellEditor {

        protected JButton button;

        private String label;

        private boolean isPushed;

        private int columna;

        public ButtonEditor(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            // button.setOpaque(true);
            try {
                Image img = ImageIO.read(getClass().getResource("src/Imagenes/pencil.png"));
                img.getScaledInstance(10, 10, Image.SCALE_SMOOTH);
                button.setIcon(new ImageIcon(img));
            } catch (Exception ex) {
                System.out.println(ex);
            }
            button.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    fireEditingStopped();
                }
            });
        }

        public Component getTableCellEditorComponent(JTable table, Object value,
                boolean isSelected, int row, int column) {
            if (isSelected) {
                button.setForeground(table.getSelectionForeground());
                button.setBackground(table.getSelectionBackground());
            } else {
                button.setForeground(table.getForeground());
                button.setBackground(table.getBackground());
            }
            label = (value == null) ? "" : value.toString();
            button.setText(label);
            isPushed = true;
            columna = column;
            return button;
        }

        public Object getCellEditorValue() {
            if (isPushed) {
                ped = null;
                final int fila = jTablePedidos.getSelectedRow();
                try {
                    ped = Pedidos_servicio.getInstance().recuperarPedidoCompleto(jTablePedidos.getValueAt(fila, 0).toString());
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (columna == 3) {
                    modificarPedido(fila);
                } else {
                    eliminarPedido(fila);
                }

            }
            isPushed = false;

            return new String(label);
        }

        public boolean stopCellEditing() {
            isPushed = false;
            return super.stopCellEditing();
        }

        protected void fireEditingStopped() {
            super.fireEditingStopped();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelarEmpleado;
    private javax.swing.JButton jButtonCancelarPed;
    private javax.swing.JButton jButtonCrearEmpleado;
    private javax.swing.JButton jButtonDeleteItem;
    private javax.swing.JButton jButtonEmpElim;
    private javax.swing.JButton jButtonEmpElimCanc;
    private javax.swing.JButton jButtonGenerarRTXT;
    private javax.swing.JButton jButtonGenerarRTXTTotal;
    private javax.swing.JButton jButtonGenerarRVD;
    private javax.swing.JButton jButtonGenerarReporteVentasProd;
    private javax.swing.JButton jButtonGuardarPed;
    private javax.swing.JButton jButtonNuevoPed;
    private javax.swing.JButton jButtonParamGuardar;
    private javax.swing.JButton jButtonRCEGen;
    private javax.swing.JComboBox<String> jComboEmpleado;
    private javax.swing.JComboBox<String> jComboEmpleadoTipo;
    private javax.swing.JComboBox<String> jComboRCEEmp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBonifMonto;
    private javax.swing.JLabel jLabelBonificado;
    private javax.swing.JLabel jLabelEmpElim;
    private javax.swing.JLabel jLabelEmpleadoNombre;
    private javax.swing.JLabel jLabelNped;
    private javax.swing.JLabel jLabelPedFecha;
    private javax.swing.JLabel jLabelSaldo;
    private javax.swing.JLabel jLabelSaldoQuincena;
    private javax.swing.JLabel jLabelTopeDiario;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JLabel jLabelTotalFinal;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuEmpleadoEliminar;
    private javax.swing.JMenuItem jMenuEmpleadoNuevo;
    private javax.swing.JMenu jMenuEmpleados;
    private javax.swing.JMenu jMenuParam;
    private javax.swing.JMenu jMenuPedidos;
    private javax.swing.JMenuItem jMenuRCE;
    private javax.swing.JMenuItem jMenuRTXT;
    private javax.swing.JMenuItem jMenuRTXTTotal;
    private javax.swing.JMenuItem jMenuRVD;
    private javax.swing.JMenuItem jMenuRVP;
    private javax.swing.JMenu jMenuReportes;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBusqPed;
    private javax.swing.JPanel jPanelEmpleados;
    private javax.swing.JPanel jPanelEmpleadosEliminar;
    private javax.swing.JPanel jPanelModifPed;
    private javax.swing.JPanel jPanelParametros;
    private javax.swing.JPanel jPanelReporteConsumosEmpleado;
    private javax.swing.JPanel jPanelReporteTXT;
    private javax.swing.JPanel jPanelReporteTXTTotal;
    private javax.swing.JPanel jPanelReporteVentaDia;
    private javax.swing.JPanel jPanelReporteVentasProd;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JComboBox<String> jRTXTCE;
    private javax.swing.JTextField jRTXTFd;
    private javax.swing.JTextField jRTXTFh;
    private javax.swing.JComboBox<String> jRTXTTCE;
    private javax.swing.JTextField jRTXTTFd;
    private javax.swing.JTextField jRTXTTFh;
    private javax.swing.JTextField jRVDTextFechaD;
    private javax.swing.JTextField jRVDTextFechaH;
    private javax.swing.JComboBox<String> jRVPComboTurno;
    private javax.swing.JFormattedTextField jRVPTextFechaDesde;
    private javax.swing.JFormattedTextField jRVPTextFechaHasta;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableEditPed;
    private javax.swing.JTable jTableParam;
    private javax.swing.JTable jTablePedidos;
    private javax.swing.JTextField jTextEmpIdElim;
    private javax.swing.JTextField jTextEmpleadoBon;
    private javax.swing.JTextField jTextEmpleadoBonPorc;
    private javax.swing.JTextField jTextEmpleadoDNI;
    private javax.swing.JTextField jTextEmpleadoId;
    private javax.swing.JTextField jTextEmpleadoLeg;
    private javax.swing.JTextField jTextEmpleadoNombre;
    private javax.swing.JTextField jTextEmpleadoTarjeta;
    private javax.swing.JFormattedTextField jTextFecha;
    private javax.swing.JTextField jTextNroPedido;
    private javax.swing.JTextField jTextRCEFD;
    private javax.swing.JTextField jTextRCEFH;
    // End of variables declaration//GEN-END:variables
}
